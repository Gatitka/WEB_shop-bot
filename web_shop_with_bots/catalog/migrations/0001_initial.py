# Generated by Django 4.0 on 2024-01-22 16:07

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(blank=True, unique=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='№ п/п')),
                ('name_rus', models.CharField(max_length=200, unique=True, verbose_name='Название RUS')),
                ('name_srb', models.CharField(max_length=200, unique=True, verbose_name='Название SRB')),
                ('is_active', models.BooleanField(default=False, verbose_name='активен')),
                ('slug', models.SlugField(help_text='Укажите уникальный адрес для категории блюд. Используйте только латиницу, цифры, дефисы и знаки подчёркивания', max_length=200, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ('priority',),
            },
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(blank=True, help_text="Порядковый номер отображения в категории, прим. '01'.", validators=[django.core.validators.MinValueValidator(1)], verbose_name='№ п/п')),
                ('article', models.CharField(help_text="Добавьте артикул, прим. '0101'.", max_length=6, verbose_name='артикул')),
                ('is_active', models.BooleanField(default=False, help_text='Активные позиции виды пользователям.', verbose_name='активен')),
                ('short_name_rus', models.CharField(db_index=True, help_text='Добавьте название блюда RUS.', max_length=200, unique=True, verbose_name='Название РУС')),
                ('short_name_srb', models.CharField(db_index=True, help_text='Добавьте название блюда SRB.', max_length=200, unique=True, verbose_name='Название SRB')),
                ('text_rus', models.CharField(help_text='Добавьте описание блюда RUS.', max_length=200, verbose_name='Описание РУС')),
                ('text_srb', models.CharField(help_text='Добавьте описание блюда SRB.', max_length=200, verbose_name='Описание SRB')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='menu/dish_images/', verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Внесите цену в DIN. Формат 00000.00', max_digits=7, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='цена, DIN')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=None, help_text="Внесите скидку, прим. для 10% внесите '10,00'.", max_digits=6, null=True, verbose_name='скидка, %')),
                ('final_price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Цена после скидок в DIN.', max_digits=7, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='итог цена, DIN')),
                ('weight', models.CharField(help_text='Добавьте вес в гр.', max_length=10, verbose_name='вес, гр')),
                ('uom', models.CharField(help_text="Добавьте единицы измерения, прим. 'шт.'", max_length=10, verbose_name='ед-ца измерения')),
                ('volume', models.CharField(help_text="Добавьте объем в единице позиции. Прим, '4 шт.'", max_length=10, verbose_name='объем в ед-це поз')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('vegan_icon', models.BooleanField(blank=True, default=False, help_text='Иконка веган.', null=True, verbose_name='веган')),
                ('spicy_icon', models.BooleanField(blank=True, default=False, help_text='Иконка острое.', null=True, verbose_name='острое')),
            ],
            options={
                'verbose_name': 'блюдо',
                'verbose_name_plural': 'блюда',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='DishCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='catalog.category', verbose_name='категория')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalog.dish', verbose_name='блюдо')),
            ],
            options={
                'verbose_name': 'связь блюдо-категория',
                'verbose_name_plural': 'связи блюдо-категория',
                'ordering': ['dish'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='category',
            field=models.ManyToManyField(help_text='Выберите категории блюда.', through='catalog.DishCategory', to='catalog.Category', verbose_name='категория'),
        ),
        migrations.AddConstraint(
            model_name='dishcategory',
            constraint=models.UniqueConstraint(fields=('dish', 'category'), name='unique_dish_category'),
        ),
    ]

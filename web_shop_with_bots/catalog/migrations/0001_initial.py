# Generated by Django 4.0 on 2024-02-09 11:57

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(blank=True, db_index=True, unique=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='№ п/п')),
                ('is_active', models.BooleanField(default=False, verbose_name='активен')),
                ('slug', models.SlugField(help_text='Укажите уникальный адрес для категории блюд. Используйте только латиницу, цифры, дефисы и знаки подчёркивания', max_length=200, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'категория',
                'verbose_name_plural': 'категории',
                'ordering': ('priority',),
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Dish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.PositiveSmallIntegerField(blank=True, db_index=True, help_text="Порядковый номер отображения в категории, прим. '01'.", validators=[django.core.validators.MinValueValidator(1)], verbose_name='№ п/п')),
                ('article', models.CharField(db_index=True, help_text="Добавьте артикул, прим. '0101'.", max_length=6, verbose_name='артикул')),
                ('is_active', models.BooleanField(default=False, help_text='Активные позиции виды пользователям.', verbose_name='активен')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='menu/dish_images/', verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Внесите цену в DIN. Формат 00000.00', max_digits=7, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='цена, DIN')),
                ('discount', models.DecimalField(blank=True, decimal_places=2, default=None, help_text="Внесите скидку, прим. для 10% внесите '10,00'.", max_digits=6, null=True, verbose_name='скидка, %')),
                ('final_price', models.DecimalField(decimal_places=2, default=Decimal('0'), help_text='Цена после скидок в DIN.', max_digits=7, validators=[django.core.validators.MinValueValidator(0.01)], verbose_name='итог цена, DIN')),
                ('weight_volume', models.CharField(default=1, help_text='Добавьте вес/объем.', max_length=10, verbose_name='вес/объем')),
                ('units_in_set', models.CharField(default=1, help_text='Добавьте кол-во ед-ц в одной позиции.', max_length=10, verbose_name='объем в ед-це поз')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('vegan_icon', models.BooleanField(blank=True, default=False, help_text='Иконка веган.', null=True, verbose_name='веган')),
                ('spicy_icon', models.BooleanField(blank=True, default=False, help_text='Иконка острое.', null=True, verbose_name='острое')),
            ],
            options={
                'verbose_name': 'блюдо',
                'verbose_name_plural': 'блюда',
                'ordering': ['pk'],
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UOM',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, help_text='Название внутри системы, не видно на сайте', max_length=200, unique=True, verbose_name='системное название')),
            ],
            options={
                'verbose_name': 'ед-ца измерения',
                'verbose_name_plural': 'ед-цы измерения',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DishCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='dishcategory', to='catalog.category')),
                ('dish', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dishcategory', to='catalog.dish')),
            ],
            options={
                'verbose_name': 'link dish-category',
                'verbose_name_plural': 'связи блюдо-категория',
                'ordering': ['dish'],
            },
        ),
        migrations.AddField(
            model_name='dish',
            name='category',
            field=models.ManyToManyField(db_index=True, help_text='Выберите категории блюда.', through='catalog.DishCategory', to='catalog.Category'),
        ),
        migrations.AddField(
            model_name='dish',
            name='units_in_set_uom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dishes_units_in_set', to='catalog.uom', verbose_name='ед-ц в поз'),
        ),
        migrations.AddField(
            model_name='dish',
            name='weight_volume_uom',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='dishes_weight', to='catalog.uom', verbose_name='ед-ца измерения веса/обема'),
        ),
        migrations.CreateModel(
            name='CategoryTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('name', models.CharField(blank=True, db_index=True, max_length=200, null=True, unique=True, verbose_name='название')),
                ('messenger_name', models.CharField(blank=True, db_index=True, max_length=200, null=True, unique=True, verbose_name='мсдж_название')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='catalog.category')),
            ],
            options={
                'verbose_name': 'категория Translation',
                'db_table': 'catalog_category_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UOMTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text', models.CharField(blank=True, help_text='текст ед-цы измерения.', max_length=20, null=True, verbose_name='текст для сайта')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='catalog.uom')),
            ],
            options={
                'verbose_name': 'ед-ца измерения Translation',
                'db_table': 'catalog_uom_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='DishTranslation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('short_name', models.CharField(blank=True, db_index=True, help_text='Добавьте название блюда.', max_length=200, null=True, unique=True, verbose_name='короткое описание')),
                ('text', models.CharField(blank=True, help_text='Добавьте описание блюда.', max_length=200, null=True, verbose_name='полное описание')),
                ('msngr_short_name', models.CharField(blank=True, db_index=True, help_text='Добавьте название блюда.', max_length=200, null=True, unique=True, verbose_name='мсдж_короткое описание')),
                ('msngr_text', models.CharField(blank=True, help_text='Добавьте описание блюда.', max_length=200, null=True, verbose_name='мсдж_полное описание')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='catalog.dish')),
            ],
            options={
                'verbose_name': 'блюдо Translation',
                'db_table': 'catalog_dish_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.AddConstraint(
            model_name='dishcategory',
            constraint=models.UniqueConstraint(fields=('dish', 'category'), name='unique_dish_category'),
        ),
        migrations.AlterUniqueTogether(
            name='categorytranslation',
            unique_together={('language_code', 'master')},
        ),
    ]

from django.conf import settings
import requests
from parler.utils.context import switch_language
from django.utils import timezone
from exceptions import BotMessageSendError
import logging


logger = logging.getLogger(__name__)


def send_message_new_order(instance):
    """ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
        –æ –Ω–æ–≤–æ–º –∑–∞–∫–∞–∑–µ –Ω–∞ —Å–∞–π—Ç–µ."""

    message = get_message(instance)
    return send_message_telegram(settings.CHAT_ID, message)


def get_message(instance):
    order_data = get_order_data(instance)

    user_data = get_user_data(instance)

    delivery_data = get_delivery_data(instance)

    orderdishes_data = get_orderdishes_data(instance)

    comment_data = get_comment_data(instance)

    total_data = get_total_data(instance)

    message = (
        f"‚ùóÔ∏è**–ó–∞–∫–∞–∑ –Ω–∞ —Å–∞–π—Ç–µ** 'Yume Sushi':\n"
        f"{order_data}"

        "üëâ –î–∞–Ω–Ω—ã–µ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è:\n"
        # Diana, +384677436384,
        # (Tm) @Diana_Dernovici, (1 –∑–∞–∫)
        f"{user_data}"

        "üì¶ –î–æ—Å—Ç–∞–≤–∫–∞:\n"
        # –ê–¥—Ä–µ—Å: –í—Ä–∞—á–∞—Ä,–ö—É–º–∞–Ω–æ–≤—Å–∫–∞ 24, –∫–≤ 5
        # –í—Ä–µ–º—è: –ö 18:30
        f"{delivery_data}\n"

        "üìù –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:\n"
        # –ó–∞–∫–∞–∑ –∫–æ –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞ 18:30. –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏. –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–æ–Ω –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É,–ø—Ä–æ—Å—å–±–∞ –∫—É—Ä—å–µ—Ä—É –Ω–∞–±—Ä–∞—Ç—å –º–µ–Ω—è
        f"{comment_data}\n"

        "---\n"
        "üõí –¢–æ–≤–∞—Ä—ã:\n"
        # 1. –†–æ–ª–ª –•–æ–∫–∫–∞–π–¥–æ 1x1¬†000¬†din = 1¬†000¬†din
        f"{orderdishes_data}"

        "**---**\n"
        f"{total_data}"
    )
    return message


def get_order_data(instance):
    """ –ù–æ–º–µ—Ä #1. –ü–ï–†–í–´–ô –ó–ê–ö–ê–ó."""
    first_order = ""
    if instance.is_first_order:
        first_order = '–ü–ï–†–í–´–ô –ó–ê–ö–ê–ó'

    return f"–ù–æ–º–µ—Ä #{instance.order_number}. {first_order}\n\n"


def get_user_data(instance):
    """ # Diana, +384677436384,
        # (Tm) @Diana_Dernovici, (1 –∑–∞–∫)  üôã‚Äç‚ôÇÔ∏èüë§"""
    msngr_acc_rep = ''
    user_icon = 'üë§'

    if instance.user:
        orders_qty = instance.user.orders_qty
        if instance.user.messenger_account:
            msngr_acc = instance.user.messenger_account
            msngr_acc_rep = (
                f"({msngr_acc.msngr_type}) {msngr_acc.msngr_username}, ")

        msngr_acc_and_orders = (
            f"{msngr_acc_rep}({orders_qty} –∑–∞–∫)\n")
    else:
        msngr_acc_and_orders = ''

    return (f"{user_icon} {instance.recipient_name}, "
            f"{instance.recipient_phone} \n "
            f"{msngr_acc_and_orders}\n")


def get_delivery_data(instance):
    """üöó –ü—Ä–∏–≤–µ–∑—Ç–∏
        –ê–¥—Ä–µ—Å: Ravaniƒçka 29, ap 4 ,sprat 1
        –í—Ä–µ–º—è: –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ"""
    if instance.delivery.type == 'delivery':
        delivery_data = (
            "üöó –ü—Ä–∏–≤–µ–∑—Ç–∏\n"
            f"–ê–¥—Ä–µ—Å: {instance.recipient_address}\n"
        )

    elif instance.delivery.type == 'takeaway':
        delivery_data = "üõçÔ∏è –°–∞–º–æ–≤—ã–≤–æ–∑\n"

    delivery_time = instance.delivery_time
    if delivery_time:
        current_time = timezone.now()
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ delivery_time —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–º –¥–Ω–µ–º
        if instance.delivery_time.date() == current_time.date():
            # –ï—Å–ª–∏ delivery_time —Å–µ–≥–æ–¥–Ω—è, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—Ä–µ–º—è
            delivery_time = (f"–í—Ä–µ–º—è: —Å–µ–≥–æ–¥–Ω—è –∫ "
                             f"{instance.delivery_time.strftime('%H:%M')}\n")
        else:
            # –ï—Å–ª–∏ delivery_time –≤ –±—É–¥—É—â–µ–º, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è
            delivery_time = (f"–í—Ä–µ–º—è: "
                             f"{instance.delivery_time.strftime('%d-%m-%Y- %H:%M')}\n")
    else:
        delivery_time = "–í—Ä–µ–º—è: –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ\n"

    return (delivery_data + delivery_time)


def get_comment_data(instance):
    """#–ó–∞–∫–∞–∑ –∫–æ –≤—Ä–µ–º–µ–Ω–∏, –Ω–∞ 18:30. –û–ø–ª–∞—Ç–∞ –Ω–∞–ª–∏—á–Ω—ã–º–∏.
    –ï—Å–ª–∏ –∏–Ω—Ç–µ—Ä—Ñ–æ–Ω –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Å—Ä–∞–∑—É,–ø—Ä–æ—Å—å–±–∞ –∫—É—Ä—å–µ—Ä—É –Ω–∞–±—Ä–∞—Ç—å –º–µ–Ω—è"""
    comment = instance.comment if instance.comment is not None else ""
    comment_data = (
        f"–û–ø–ª–∞—Ç–∞ {instance.payment_type}. {comment}"
    )
    return comment_data


def get_orderdishes_data(instance):
    orderdishes = ''
    num = 1

    for orderdish in instance.orderdishes.all():
        dish = orderdish.dish
        with switch_language(dish, 'ru'):
            short_name = orderdish.dish.short_name
            # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–≤–æ–¥ short_description –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —è–∑—ã–∫

        str = (f"#{num}. {short_name} "
               f"{orderdish.quantity}x{orderdish.unit_price} rsd"
               f"= {orderdish.unit_amount}\n")
        num += 1
        orderdishes += str

    return orderdishes


def get_total_data(instance):
    """–¢–æ–≤–∞—Ä—ã: 2¬†150¬†din
        –î–æ—Å—Ç–∞–≤–∫–∞: 0¬†din
        –ò—Ç–æ–≥–æ: 2¬†150¬†din"""

    # –¥–æ—Å—Ç–∞–≤–∫–∞
    delivery_cost = f"{instance.delivery_cost} rsd\n"
    if instance.delivery.type == 'delivery':
        if instance.delivery_zone.name == '—É—Ç–æ—á–Ω–∏—Ç—å':
            delivery_cost = "—É—Ç–æ—á–Ω–∏—Ç—å!!!\n"

    # –∏—Ç–æ–≥–æ
    if delivery_cost == "—É—Ç–æ—á–Ω–∏—Ç—å!!!\n":
        total = f"{instance.final_amount_with_shipping} rsd –ë–ï–ó –î–û–°–¢–ê–í–ö–ò!!!"
    else:
        total = f"{instance.final_amount_with_shipping} rsd"

    total_data = (
        f"–¢–æ–≤–∞—Ä—ã: {instance.discounted_amount} rsd\n"
        f"–î–æ—Å—Ç–∞–≤–∫–∞: {delivery_cost}"
        f"–ò—Ç–æ–≥–æ: {total}")

    return total_data


def send_error_message_order_unsaved(order_id, e):
    """ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
        –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –∏–∑ –±–æ—Ç–∞ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è."""

    message = f'–ó–∞–∫–∞–∑ TM BOT #{order_id} –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.'
    send_message_telegram(settings.CHAT_ID, message)


def send_error_message_order_saved(order_id):
    """ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–æ–º –≤ –∞–¥–º–∏–Ω—Å–∫–∏–π —á–∞—Ç
        –æ —Ç–æ–º, —á—Ç–æ –∑–∞–∫–∞–∑ –∏–∑ –±–æ—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è –Ω–æ —Å –æ—à–∏–±–∫–∞–º–∏."""

    message = f'! –ó–∞–∫–∞–∑ TM BOT #{order_id} —Å–æ—Ö—Ä–∞–Ω–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏.'
    send_message_telegram(settings.CHAT_ID, message)


def send_message_telegram(chat_id, message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    url = f'https://api.telegram.org/bot{settings.BOT_TOKEN}/sendMessage'
    payload = {
        'chat_id': chat_id,
        'text': message,
        'parse_mode': 'Markdown'
    }
    response = requests.post(url, data=payload)
    response = response.json()
    if response['ok'] is False:
        raise BotMessageSendError(
            f"Failed to send telegram message {message}: "
            f"{response}")


def send_request_order_status_update(new_status, order_id):
    token = settings.BOTOBOT_API_KEY
    #token = settings.BOT_TOKEN
    url = f"https://www.botobot.ru/api/v1/updateOrderStatus/{token}"

    if new_status == 'WCO':
        status = 10
    elif new_status == "CFD":
        status = 20
    elif new_status == "OND":
        status = 70
    elif new_status == "DLD":
        status = 90
    elif new_status == "CND":
        status = 30

    payload = {'id': order_id,
               'status': status}
    try:
        # –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞
        response = requests.post(url, data=payload)
        response_data = response.json()
        reply_status = response_data.get('status')
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞
        if response.status_code == 200 and reply_status == 'success':
            logger.info(f"TM order {order_id} "
                        f"status updated to {new_status} "
                        f"(status: {reply_status}).")
        else:
            error_message = response_data.get('message',
                                              'No error message provided')
            logger.error(f"Failed to update TM order {order_id} status to "
                         f"{new_status} "
                         f"(status: {reply_status}): {error_message}")

    except requests.RequestException as e:
        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
        logger.error(f"Sending request failed for order {order_id} "
                     f"with status {new_status} (status: {str(e)}")

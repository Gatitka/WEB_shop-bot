# Generated by Django 4.0 on 2024-03-26 11:28

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models

import users.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('promos', '0001_initial'),
        ('catalog', '0007_alter_dish_article_alter_dish_final_price_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(default=1, help_text='Внесите колличество.', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Кол-во *')),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Подтянется автоматически.', max_digits=6, null=True, verbose_name='Цена за ед-цу, DIN.')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Посчитается автоматически.', max_digits=7, verbose_name='Стоимость всей позиции, DIN.')),
                ('dish_article', models.PositiveSmallIntegerField(blank=True, help_text='Подтянется автоматически.', null=True, verbose_name='Запись блюда в БД')),
                ('cart_number', models.PositiveSmallIntegerField(blank=True, help_text='Подтянется автоматически.', null=True, verbose_name='Запись корзины в БД')),
            ],
            options={
                'verbose_name': 'связь корзина-блюдо',
                'verbose_name_plural': 'связи корзина-блюдо',
                'ordering': ['cart'],
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_number', models.IntegerField(blank=True, help_text='Проставится автоматически.', null=True, verbose_name='Номер заказа')),
                ('device_id', models.CharField(blank=True, max_length=100, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('status', models.CharField(choices=[('WCO', 'ожидает подтверждения'), ('INA', 'недоступен'), ('CFD', 'подтвержден'), ('PYD', 'оплачен'), ('RTN', 'оформлен возврат'), ('RDY', 'готов'), ('HDY', 'передан в доставку'), ('DLD', 'доставлен'), ('CLD', 'выдан')], default='WCO', max_length=3, verbose_name='Статус')),
                ('city', models.CharField(choices=[('Beograd', 'Beograd'), ('Novi_sad', 'Novi Sad')], default='Beograd', max_length=20, verbose_name='город *')),
                ('recipient_name', models.CharField(max_length=400, validators=[users.validators.validate_first_and_last_name], verbose_name='имя получателя *')),
                ('recipient_phone', phonenumber_field.modelfields.PhoneNumberField(help_text="Внесите телефон, прим. '+38212345678'. Для пустого значения, внесите 'None'.", max_length=128, region=None, verbose_name='телефон получателя *')),
                ('recipient_address', models.CharField(blank=True, max_length=100, null=True, verbose_name='адрес доставки')),
                ('delivery_db', models.CharField(blank=True, max_length=10, null=True, verbose_name='доставка запись в бд')),
                ('delivery_zone_db', models.CharField(blank=True, max_length=10, null=True, verbose_name='зона доставки запись в бд')),
                ('delivery_cost', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Посчитается автоматически. Для доставки будет +, для самовывоза -.', max_digits=7, null=True, verbose_name='стоимость доставки')),
                ('delivery_address_data', models.JSONField(blank=True, default=dict, help_text='для хранения адреса и координат доставки', null=True, verbose_name='Данные доставки')),
                ('delivery_time', models.DateTimeField(blank=True, null=True, verbose_name='время доставки')),
                ('persons_qty', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(10)], verbose_name='Кол-во приборов *')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Посчитается автоматически.', max_digits=8, verbose_name='сумма заказа до скидки, DIN')),
                ('discount', models.DecimalField(decimal_places=2, default=0, help_text="Опциональная доп скидка вводится вручную в формате '0000.00'.", max_digits=8, null=True, verbose_name='Доп скидка, DIN')),
                ('discounted_amount', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Посчитается автоматически.', max_digits=8, verbose_name='Сумма заказа после скидок, DIN')),
                ('final_amount_with_shipping', models.DecimalField(blank=True, decimal_places=2, default=0, help_text='Посчитается автоматически.', max_digits=8, verbose_name='Сумма заказа с учетом скидок и доставки, DIN')),
                ('payment_type', models.CharField(choices=[('cash', 'cash'), ('card', 'card')], max_length=20, verbose_name='способ оплаты *')),
                ('items_qty', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Посчитается автоматически.', verbose_name='Кол-во ед-ц заказа, шт')),
                ('language', models.CharField(blank=True, choices=[('en', 'English'), ('ru', 'Russian'), ('sr-latn', 'Serbian')], help_text='Язык общения.', max_length=10, null=True, verbose_name='lg')),
                ('comment', models.TextField(blank=True, help_text='Уточнение по адресу доставки: частный дом / этаж, квартира, домофон. Прочие комм к заказу', max_length=400, null=True, verbose_name='Комментарий')),
                ('is_first_order', models.BooleanField(default=False, verbose_name='Первый заказ')),
            ],
            options={
                'verbose_name': 'заказ',
                'verbose_name_plural': 'заказы',
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='OrderDish',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='Кол-во')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, null=True)),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=7)),
                ('dish_article', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Арт. блюда/БД')),
                ('order_number', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='# заказа/БД')),
            ],
            options={
                'verbose_name': 'заказ-блюдо',
                'verbose_name_plural': 'заказ-блюдо',
                'ordering': ['dish'],
            },
        ),
        migrations.CreateModel(
            name='ShoppingCart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(blank=True, max_length=100, null=True, verbose_name='ID устройства')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('complited', models.BooleanField(default=False, verbose_name='Заказана')),
                ('amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Посчитается автоматически.', max_digits=10, verbose_name='Сумма, DIN')),
                ('discount', models.DecimalField(decimal_places=2, default=0.0, max_digits=6, null=True, verbose_name='Сумма скидки по промокоду, DIN')),
                ('discounted_amount', models.DecimalField(blank=True, decimal_places=2, default=0.0, help_text='Посчитается автоматически.', max_digits=10, verbose_name='Итог сумма, DIN')),
                ('items_qty', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Посчитается автоматически.', verbose_name='Кол-во порций, шт')),
                ('dishes', models.ManyToManyField(related_name='shopping_carts', through='shop.CartDish', to='catalog.Dish', verbose_name='Товары в корзине')),
                ('promocode', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='promos.promocode', verbose_name='Промокод')),
            ],
            options={
                'verbose_name': 'корзина покупок',
                'verbose_name_plural': 'корзины покупок',
                'ordering': ['-created'],
            },
        ),
    ]

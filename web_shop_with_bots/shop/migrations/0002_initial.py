# Generated by Django 4.0 on 2024-03-26 11:28

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalog', '0007_alter_dish_article_alter_dish_final_price_and_more'),
        ('delivery_contacts', '0009_alter_deliveryzone_polygon'),
        ('promos', '0002_initial'),
        ('users', '0001_initial'),
        ('shop', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='shoppingcart',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Поиск в поле по имени и номеру телефона.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='shopping_cart', to='users.baseprofile', verbose_name='ID клиента'),
        ),
        migrations.AddField(
            model_name='orderdish',
            name='dish',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderdishes', to='catalog.dish', verbose_name='Товары в заказе'),
        ),
        migrations.AddField(
            model_name='orderdish',
            name='order',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orderdishes', to='shop.order', verbose_name='Заказ'),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='delivery_contacts.delivery', verbose_name='доставка *'),
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_zone',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='delivery_contacts.deliveryzone', verbose_name='зона доставки'),
        ),
        migrations.AddField(
            model_name='order',
            name='dishes',
            field=models.ManyToManyField(help_text='Добавьте блюда в заказ.', through='shop.OrderDish', to='catalog.Dish', verbose_name='Товары в заказе'),
        ),
        migrations.AddField(
            model_name='order',
            name='promocode',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='promos.promocode', verbose_name='Промокод'),
        ),
        migrations.AddField(
            model_name='order',
            name='restaurant',
            field=models.ForeignKey(blank=True, default=1, help_text='Подтянется автоматически.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='заказы', to='delivery_contacts.restaurant', verbose_name='точка '),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(blank=True, help_text='Поиск по имени и номеру телефона.', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='users.baseprofile', verbose_name='Клиент'),
        ),
        migrations.AddField(
            model_name='cartdish',
            name='cart',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cartdishes', to='shop.shoppingcart', verbose_name='Заказ'),
        ),
        migrations.AddField(
            model_name='cartdish',
            name='dish',
            field=models.ForeignKey(help_text='Начните писать название блюда...', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cartdishes', to='catalog.dish', verbose_name='Товары в корзине *'),
        ),
        migrations.AddConstraint(
            model_name='orderdish',
            constraint=models.UniqueConstraint(fields=('dish', 'order'), name='unique_dish_order'),
        ),
        migrations.AddConstraint(
            model_name='order',
            constraint=models.UniqueConstraint(fields=('order_number', 'created'), name='unique_order_number_created'),
        ),
        migrations.AddConstraint(
            model_name='cartdish',
            constraint=models.UniqueConstraint(fields=('dish', 'cart'), name='unique_dish_cart'),
        ),
    ]
